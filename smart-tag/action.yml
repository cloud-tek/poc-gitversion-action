name: "smart-tag"
description: "Inserts a git tag"
inputs:
  semVer:
    description: "Semantic version"
    required: true
    default: "0.1.0"
outputs:
  tag:
    description: "Tag"
    value: ${{ steps.result.outputs.tag }}
runs:
  using: "composite"
  steps:
  - shell: bash
    id: git
    name: git
    run: |
      TAG=$(git describe --tags --abbrev=0)
      echo "last tag: $TAG"
      echo "shouldTag=${{ github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/feature') || github.ref == 'refs/heads/main') }}" >> "$GITHUB_OUTPUT"
      echo "isPreReleaseBranch=${{ startsWith(github.ref, 'refs/heads/feature') || startsWith(github.ref, 'refs/heads/release') }}" >> "$GITHUB_OUTPUT"
      echo "isMainBranch=${{ github.ref == 'refs/heads/main' }}" >> "$GITHUB_OUTPUT"
      echo "isPrMerge=${{ startsWith(github.event.head_commit.message, 'Merge pull request') && (contains(github.event.head_commit.message, 'feature') || contains(github.event.head_commit.message, 'release')) }}" >> "$GITHUB_OUTPUT"
      echo "lastPreReleaseTag=$TAG" >> "$GITHUB_OUTPUT"

  - shell: bash
    id: git-tag-feature
    name: git tag (push feature/*)
    if: ${{ github.event_name == 'push' && steps.git.outputs.isPreReleaseBranch == 'true' }}
    run: |
      git tag ${{ inputs.semVer }} --force
      git push origin ${{ inputs.semVer }} --force
      echo "${{ steps.gitversion.outputs.semVer }} --> ${{ github.ref }}"
      echo "tag=${{ inputs.semVer }}" >> "$GITHUB_OUTPUT"

  - shell: bash
    id: git-tag-main
    name: git tag (merge feature/* -> main)
    if: ${{ github.event_name == 'push' && steps.git.outputs.isMainBranch == 'true' && steps.git.outputs.isPrMerge == 'true' }}
    run: |
      VNEXT=''
      if [[ ${{ steps.git.outputs.lastPreReleaseTag }} =~ ^((0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*))(-(.*))?$ ]];
      then
        VNEXT=${BASH_REMATCH[1]}
        echo "Tagging $VERSION on ${{ github.ref }}"
      else
        echo "${{ steps.describe.outputs.lastPreReleaseTag }} does not match the regex. using provided semVer"
        VNEXT=${{ inputs.semVer }}
      fi

      git tag $VNEXT --force
      git push origin $VNEXT --force
      echo "$VNEXT --> ${{ github.ref }}"
      echo "tag=$VNEXT" >> "$GITHUB_OUTPUT"

  - shell: bash
    id: result
    name: result
    run: |
      VNEXT=''
      if [[ ${{ steps.git.outputs.isMainBranch == 'true' && steps.git.outputs.isPrMerge == 'true' }} ]];
      then
        VNEXT=${{ steps.git-tag-main.outputs.tag }}
      else
        VNEXT=${{ steps.git-tag-feature.outputs.tag }}
      fi

      echo "tag=$VNEXT" >> "$GITHUB_OUTPUT"